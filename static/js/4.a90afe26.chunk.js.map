{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","assets/images/userPhotoDialogs.svg","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Messages/Message.jsx","Components/Dialogs/AddMessageForm/AddMessageForm.js","Components/Dialogs/Dialogs.jsx","HOC/withAuthRedirect.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","userPhoto","wrapperDialogs","wrapperMessage","wrapperTextarea","btnSendMessage","__webpack_require__","p","DialogItem","props","path","id","react_default","a","createElement","className","s","src","userPhotoDialogs","concat","react_router_dom","to","name","Message","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","map","item","Dialogs_DialogItem_DialogItem","key","messagesElements","Messages_Message","newMessageBody","isAuth","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","react_router","mapStateToPropsForRedirect","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","React","connect","compose","dispatch","sendMessageCreator"],"mappings":"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","file":"static/js/4.a90afe26.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2vzMa\",\"dialogsItems\":\"Dialogs_dialogsItems__1bW1i\",\"active\":\"Dialogs_active__1u_HD\",\"messages\":\"Dialogs_messages__11vnr\",\"message\":\"Dialogs_message__1J5eI\",\"userPhoto\":\"Dialogs_userPhoto__1d5ys\",\"wrapperDialogs\":\"Dialogs_wrapperDialogs__1gOwG\",\"wrapperMessage\":\"Dialogs_wrapperMessage__1fTqR\",\"wrapperTextarea\":\"Dialogs_wrapperTextarea___HBxG\",\"btnSendMessage\":\"Dialogs_btnSendMessage__22xkB\"};","module.exports = __webpack_public_path__ + \"static/media/userPhotoDialogs.a8bb2c7f.svg\";","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport userPhotoDialogs from '../../../assets/images/userPhotoDialogs.svg'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.wrapperDialogs}>\r\n        <img className={s.userPhoto} src={userPhotoDialogs}/>\r\n        <div className={`${s.dialogs} ${s.active}`}>\r\n            <NavLink to={path}> {props.name} </NavLink>\r\n        </div>\r\n    </div>\r\n};\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>\r\n        <div className={s.wrapperMessage}>\r\n        {props.message}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormControls\";\r\nimport s from '../Dialogs.module.css'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength100]}\r\n                       name='newMessageBody'\r\n                       placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button className={s.btnSendMessage}> Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: 'AddMessageForm'})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Messages/Message';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map((item) => {\r\n        return <DialogItem name={item.name} key={item.id} id={item.id}/>\r\n    });\r\n    let messagesElements = state.messages.map((item) => {\r\n        return <Message key={item.id} message={item.message}/>\r\n    });\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    // let onSendMessageClick = () => {\r\n    //     props.sendMessage();\r\n    // };\r\n    // let onNewMessageChange =(e) => {\r\n    //  let body=e.target.value;\r\n    //  props.updateNewMessageBody(body)\r\n    // };\r\n\r\n//alert(props.isAuth)\r\n\r\n    let addMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n    return (\r\n        <div>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>  {messagesElements} </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.wrapperTextarea}>\r\n                <AddMessageForm onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect =(state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const  withAuthRedirect =(Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if  (!this.props.isAuth)return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n    };\r\n\r\n  let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectAuthRedirectComponent\r\n}\r\n\r\n\r\nexport default withAuthRedirect","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport withAuthRedirect from '../../HOC/withAuthRedirect';\r\nimport {compose} from 'redux'\r\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\r\n\r\nlet mapStateToProps= (state) => {\r\nreturn {\r\n    dialogsPage: state.dialogsPage,\r\n    isAuth:state.auth.isAuth\r\n}\r\n};\r\nlet mapDispatchToProps= (dispatch) => {\r\n    return {\r\n      sendMessage:(newMessageBody)=> {\r\n          dispatch(sendMessageCreator(newMessageBody))\r\n      },\r\n      // updateNewMessageBody:(body)=> {\r\n      //     dispatch(updateNewMessageBodyCreator(body))\r\n      // }\r\n    }\r\n};\r\n\r\n\r\n\r\n// let AuthRedirectComponent =  withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps,mapDispatchToProps) (AuthRedirectComponent);\r\n\r\nexport default compose (\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n     withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}