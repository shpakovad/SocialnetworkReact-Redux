{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","assets/images/like.svg","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","status","wrapperStatus","mainPhoto","contact","selfData","wrapperInfoDescription","editBtn","fileInput","posts","postsBlock","wrapperAddBtn","item","iconUser","like","likeText","__webpack_require__","p","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","react_default","a","createElement","className","s","onDoubleClick","value","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","maxLength40","maxLengthCreator","maxLength50","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","style","saveBtn","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","ProfileInfo_Contact","contactTitle","contactValue","aboutMe","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","preloader","alt","src","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","message","likesCount","MyPosts","React","memo","postsElements","MyPosts_Post_Post","id","AddNewPostFormRedux","values","addPost","newPostText","maxLength10","Field","component","placeholder","name","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUsersProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.5b3d6b7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__oo9fj\",\"status\":\"ProfileInfo_status__3hJBy\",\"wrapperStatus\":\"ProfileInfo_wrapperStatus__1voON\",\"mainPhoto\":\"ProfileInfo_mainPhoto__lsUHQ\",\"contact\":\"ProfileInfo_contact__1BVUK\",\"selfData\":\"ProfileInfo_selfData__3yiz6\",\"wrapperInfoDescription\":\"ProfileInfo_wrapperInfoDescription__299Pz\",\"editBtn\":\"ProfileInfo_editBtn__1lLjn\",\"fileInput\":\"ProfileInfo_fileInput__1Lll_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__2Inyp\",\"postsBlock\":\"MyPosts_postsBlock__Qc36M\",\"wrapperAddBtn\":\"MyPosts_wrapperAddBtn__1gUOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__38eC3\",\"iconUser\":\"Post_iconUser__3gonP\",\"like\":\"Post_like__1cxbK\",\"likeText\":\"Post_likeText__G4_Kw\"};","module.exports = __webpack_public_path__ + \"static/media/like.8d818e4e.svg\";","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deActivatedEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div className={s.wrapperStatus}>\r\n\r\n                <b> </b> <span className={s.status}\r\n                               onDoubleClick={activatedEditMode}> {props.status || '---------'}  </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input value={status}\r\n                       onChange={onStatusChange}\r\n                       autoFocus={true}\r\n                       onBlur={deActivatedEditMode}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../../common/FormsControls/FormControls.module.css\";\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst maxLength40 = maxLengthCreator(40);\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return <form className={s.selfData} onSubmit={handleSubmit}>\r\n        <div>\r\n            <button className={style.saveBtn}> Save</button>\r\n        </div>\r\n\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n\r\n        <div><b> Full name </b>:\r\n            {createField('Full name', 'fullName', [], Input)}  </div>\r\n        <div><b> Looking for a job </b>:\r\n            {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})} </div>\r\n\r\n\r\n        <div><b> My professionals skills </b>:\r\n\r\n            {createField('My professionals skills', 'lookingForAJobDescription', [maxLength50], Textarea)}\r\n        </div>\r\n\r\n        <div><b> About me </b>:\r\n            {createField('About me', 'aboutMe', [maxLength40], Textarea)}\r\n\r\n        </div>\r\n\r\n        <div><b> Contacts </b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}:\r\n                    {createField(key, \"contacts.\" + key, [], Input)}\r\n                </b>\r\n            </div>\r\n        })} </div>\r\n    </form>\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react';\nimport s from './ProfileInfo.module.css'\nimport Preloader from \"../../../common/preloader/preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from '../../../assets/images/userPhoto.svg'\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n\n    let [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    };\n    const onSubmit = (formData) => {\n        saveProfile(formData)\n            .then(() => {\n                setEditMode(false)\n            })\n    };\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img alt=\"\" className={s.mainPhoto} src={profile.photos.large || userPhoto}/>\n                {isOwner && <input className={s.fileInput} type={'file'} onChange={onMainPhotoSelected}/>}\n\n                {editMode ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/> :\n                    <ProfileData\n                        profile={profile}\n                        isOwner={isOwner}\n                        goToEditMode={() => {\n                            setEditMode(true)\n                        }}/>}\n\n                <ProfileStatusWithHooks status={status}\n                                        updateStatus={updateStatus}/>\n            </div>\n        </div>\n    )\n};\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return <div className={s.selfData}>\n        {isOwner && <div>\n            <button className={s.editBtn} onClick={goToEditMode}> Edit</button>\n        </div>}\n        <div className={s.wrapperInfoDescription}>\n            <div><b> Full name </b>: {profile.fullName} </div>\n            <div><b> Looking for a job </b>: {profile.lookingForAJob ? 'yes' : 'no'}\n                {profile.lookingForAJob &&\n                <div><b> My professionals skills </b>: {profile.lookingForAJobDescription} </div>\n                }\n            </div>\n            <div><b> Contacts </b>: {Object.keys(profile.contacts).map(key => {\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n            })} </div>\n            <div><b> About me </b>: {profile.aboutMe} </div>\n        </div>\n    </div>\n\n};\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div className={s.contact}><b>{contactTitle}</b>:{contactValue}</div>\n};\n\n\nexport default ProfileInfo;\n\n\n\n","import React from 'react';\nimport s from './Post.module.css'\nimport like from '../../../../assets/images/like.svg'\nconst Post = (props) => {\n    return (\n\n        <div className={s.item}>\n            <img className={s.iconUser} src='https://avatars.mds.yandex.net/get-pdb/812271/11fbe7bf-4689-4f95-839f-9451e3d26c0a/s375' alt =''/>\n\n          {props.message}\n\n        <div>\n                <span className={s.likeText}>\n                    <img alt ='' className={s.like} src={like}/> {props.likesCount}\n                     </span>\n            </div>\n        </div>\n    )\n}\nexport default Post;\n//т.к. Посты у нас будут меняться (это динамические штуки), то мы сначала в Posts сделали атрибут message :  <Post message='Hello, how are you?' />,\n//эти посты передаем в компоненту Post (это каждый отдельный пост) вместе с props. Т.е., взяли атрибут + пропс: message.props\n// props всегда передаются с атрибутами. Например: <Post message='Hello, how are you?' /> , а сюда передаем это сообщение \n//'Hello, how are you?' как  {props.message}\n","import React from 'react';\nimport s from './MyPosts.module.css'\nimport Post from './Post/Post.jsx'\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../../common/FormsControls/FormControls\";\n\n\nconst MyPosts = React.memo(props => {\n\n    let postsElements = props.posts.map((item) => {\n        return <Post key={item.id} message={item.message} likesCount={item.likesCount}/>\n    });\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText)\n    };\n\n    return (\n\n        <div className={s.postsBlock}>\n            <h3 className={s.postsBlock}> My posts </h3>\n\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n});\n\nconst maxLength10 = maxLengthCreator(50);\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       placeholder={'Post message'}\n                       name='newPostText'\n                       validate={[required, maxLength10]}/>\n            </div>\n            <div className={s.wrapperAddBtn}>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n};\n\nconst AddNewPostFormRedux = reduxForm({form: 'AddNewPostForm'})(AddNewPostForm);\n\nexport default MyPosts;\n\n\n\n","import MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;\n\n\n\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = (props) => {\n\n    return (\n        <div>\n            <ProfileInfo savePhoto={props.savePhoto}\n                         isOwner={props.isOwner} profile={props.profile} status={props.status}\n                         updateStatus={props.updateStatus}\n                         saveProfile={props.saveProfile}/>\n            <MyPostsContainer/>\n        </div>\n    )\n};\nexport default Profile;\n\n\n\n","import React from 'react';\nimport Profile from \"./Profile\";\nimport {getStatus, getUsersProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profileReducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        ;\n        this.props.getUsersProfile(userId);\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}/>\n        )\n    }\n};\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUsersProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter\n)(ProfileContainer)\n\n\n\n"],"sourceRoot":""}